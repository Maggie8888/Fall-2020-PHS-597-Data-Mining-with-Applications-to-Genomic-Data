# -*- coding: utf-8 -*-
"""HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16JfKV_-XjYI4vP5icmDuHcedy0A9fEnL
"""

import random
random.seed(1234567)

import numpy as np
mean=[0,0,0,0]
matrix=[[1,0.5,0.5,0.5],
        [0.5,1,0.5,0.5],
        [0.5,0.5,1,0.5],
        [0.5,0.5,0.5,1]]
X=np.random.multivariate_normal(mean,matrix,100)

B= np.random.uniform(0,1,4)

mean=np.multiply(X,B)

matrix=[[1,0.5,0.5,0.5],
        [0.5,1,0.5,0.5],
        [0.5,0.5,1,0.5],
        [0.5,0.5,0.5,1]]

input=[0.03]*100

Y=np.diagflat(input)

from numpy.linalg import inv
Beta=np.dot(np.dot(inv(np.dot(np.transpose(X),X)),np.transpose(X)),Y)

import pandas as pd
Beta = pd.DataFrame(Beta)
Beta.mean(axis=1)

Beta.var(axis=1)

import statistics
def beta_p(p,X,Y):
 X=pd.DataFrame(X)
 Beta1=np.dot(np.dot(inv(np.dot(np.transpose(X.iloc[:,X.columns != p]),X.iloc[:,X.columns != p])),np.transpose(X.iloc[:,X.columns != p])),Y)
 res1=np.subtract(Y,np.dot(X.iloc[:,X.columns != p],Beta1))
 Beta2=np.dot(np.dot(inv(np.dot(np.transpose(X.iloc[:,X.columns != p]),X.iloc[:,X.columns != p])),np.transpose(X.iloc[:,X.columns != p])),X.iloc[:,p])
 res2=np.subtract(X.iloc[:,p],np.dot(X.iloc[:,X.columns != p],Beta2))
 Beta3=np.dot(np.dot((1/np.dot(np.transpose(res2),res2)),np.transpose(res2)),res1)
 return [statistics.mean(Beta3),statistics.variance(Beta3)]

beta_p(0,X,Y)

beta_p(1,X,Y)

beta_p(2,X,Y)

beta_p(3,X,Y)